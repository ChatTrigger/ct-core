buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://jitpack.io'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'net.minecraftforge.gradle.tweaker-client'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'kotlin'
apply plugin: 'java'

group 'com.chattriggers'
version '1.0.0'

compileJava {
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

minecraft {
    version = "1.8.9"
    tweakClass = "com.chattriggers.launch.ParadoxTweaker"
    mappings = "stable_22"
    runDir = 'run'
    clientJvmArgs = ["-XX:-DisableExplicitGC"] // fast world loading
    makeObfSourceJar = false
}

repositories {
    maven { url "https://jitpack.io" }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven/'
    }
    mavenCentral()
    jcenter()
}

mixin {
    // Specify "notch" or "searge" here
    defaultObfuscationEnv searge
    add sourceSets.main, "mixin.ctjs.refmap.json"
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation('org.spongepowered:mixin:0.7.10-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    implementation group: 'javax.vecmath', name: 'vecmath', version: '1.5.2'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

processResources {
    inputs.files "src/main/resources"
    outputs.dir "build/classes/main"
    copy {
        from("src/main/resources")
        into("build/classes/main")
    }
}

//jar {
//    dependsOn configurations.compile
//    from {
//        configurations.embed.collect {
//            it.isDirectory() ? it : zipTree(it)
//        }
//    }
//    exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
//}
//
//jar {
//    manifest.attributes(
//            //"MixinConfigs": 'mixins.hyperium.json, mixins.ctjs.json',
//            "MixinConfigs": 'mixins.paradox.json',
//            "TweakClass": 'dev.falsehonesty.paradox.launch.ParadoxTweaker',
//            "TweakOrder": 0,
//            "Manifest-Version": 1.0,
//            //'Main-Class': 'cc.hyperium.installer.InstallerStart'
//    )
//    configurations.embed.each { dep ->
//        from(project.zipTree(dep)) {
//            exclude 'META-INF', 'META-INF/**'
//            exclude 'org/jetbrains/annotations', 'org/jetbrains/annotations/**'
//        }
//    }
//}